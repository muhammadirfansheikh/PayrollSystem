//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Sybrid_DatabaseEntities : DbContext
    {
        public Sybrid_DatabaseEntities()
            : base("name=Sybrid_DatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AuditLog> AuditLogs { get; set; }
        public DbSet<DEL_HCM_TaxableMedical> DEL_HCM_TaxableMedical { get; set; }
        public DbSet<HCM_AbsentFlexiLog> HCM_AbsentFlexiLog { get; set; }
        public DbSet<HCM_Additional_Allowances> HCM_Additional_Allowances { get; set; }
        public DbSet<HCM_ArrearDetail> HCM_ArrearDetail { get; set; }
        public DbSet<HCM_ArrearHistory> HCM_ArrearHistory { get; set; }
        public DbSet<HCM_Atribute_Mapping> HCM_Atribute_Mapping { get; set; }
        public DbSet<HCM_Bonus> HCM_Bonus { get; set; }
        public DbSet<HCM_BonusTransactionDetail> HCM_BonusTransactionDetail { get; set; }
        public DbSet<HCM_BonusTransactionMaster> HCM_BonusTransactionMaster { get; set; }
        public DbSet<HCM_Company_Settings> HCM_Company_Settings { get; set; }
        public DbSet<HCM_CompanyFormula> HCM_CompanyFormula { get; set; }
        public DbSet<HCM_Employee_Education_Detail> HCM_Employee_Education_Detail { get; set; }
        public DbSet<HCM_EmployeeAccountDetail> HCM_EmployeeAccountDetail { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping> HCM_EmployeeAllowanceMapping { get; set; }
        public DbSet<HCM_EmployeeOvertimeDetail> HCM_EmployeeOvertimeDetail { get; set; }
        public DbSet<HCM_EmployeeSalary> HCM_EmployeeSalary { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail> HCM_EmployeeSalaryDetail { get; set; }
        public DbSet<HCM_EmployeeSESSI_Details> HCM_EmployeeSESSI_Details { get; set; }
        public DbSet<HCM_EmployeeSettlement> HCM_EmployeeSettlement { get; set; }
        public DbSet<HCM_EmployeeTax> HCM_EmployeeTax { get; set; }
        public DbSet<HCM_EmployeeTaxDetails> HCM_EmployeeTaxDetails { get; set; }
        public DbSet<HCM_EmployeeTaxDirectDeduction> HCM_EmployeeTaxDirectDeduction { get; set; }
        public DbSet<HCM_EmployeeTaxForecast> HCM_EmployeeTaxForecast { get; set; }
        public DbSet<HCM_EmployeeTaxForecastDetail_Loan> HCM_EmployeeTaxForecastDetail_Loan { get; set; }
        public DbSet<HCM_Final_Settlement> HCM_Final_Settlement { get; set; }
        public DbSet<HCM_FormMaster> HCM_FormMaster { get; set; }
        public DbSet<HCM_Fuel_DesignationMapping> HCM_Fuel_DesignationMapping { get; set; }
        public DbSet<HCM_IncreamentHistory> HCM_IncreamentHistory { get; set; }
        public DbSet<HCM_IncrementSheetAdditional> HCM_IncrementSheetAdditional { get; set; }
        public DbSet<HCM_IncrementSheetHistory> HCM_IncrementSheetHistory { get; set; }
        public DbSet<HCM_IncrementSheetInfo> HCM_IncrementSheetInfo { get; set; }
        public DbSet<HCM_Interest> HCM_Interest { get; set; }
        public DbSet<HCM_InterestIncome> HCM_InterestIncome { get; set; }
        public DbSet<HCM_Jv_accounts> HCM_Jv_accounts { get; set; }
        public DbSet<HCM_LeaveEncashment> HCM_LeaveEncashment { get; set; }
        public DbSet<HCM_Loan_Detail> HCM_Loan_Detail { get; set; }
        public DbSet<HCM_Loan_Master> HCM_Loan_Master { get; set; }
        public DbSet<HCM_LoanAttributeDetail> HCM_LoanAttributeDetail { get; set; }
        public DbSet<HCM_MedicalReinbursment> HCM_MedicalReinbursment { get; set; }
        public DbSet<HCM_Payroll_Detail> HCM_Payroll_Detail { get; set; }
        public DbSet<HCM_Payroll_Log> HCM_Payroll_Log { get; set; }
        public DbSet<HCM_Payroll_Master> HCM_Payroll_Master { get; set; }
        public DbSet<HCM_PayrollDisplay> HCM_PayrollDisplay { get; set; }
        public DbSet<HCM_PFDetail> HCM_PFDetail { get; set; }
        public DbSet<HCM_PFLog> HCM_PFLog { get; set; }
        public DbSet<HCM_PFMaster> HCM_PFMaster { get; set; }
        public DbSet<HCM_PFWithdraw> HCM_PFWithdraw { get; set; }
        public DbSet<HCM_ProvidentFund> HCM_ProvidentFund { get; set; }
        public DbSet<HCM_Salary_OverTimeHistory> HCM_Salary_OverTimeHistory { get; set; }
        public DbSet<HCM_Settlement_Detail> HCM_Settlement_Detail { get; set; }
        public DbSet<HCM_Setup_Allowance> HCM_Setup_Allowance { get; set; }
        public DbSet<HCM_Setup_Arrear> HCM_Setup_Arrear { get; set; }
        public DbSet<HCM_Setup_Atribute> HCM_Setup_Atribute { get; set; }
        public DbSet<HCM_Setup_CategoryAllowanceMapping> HCM_Setup_CategoryAllowanceMapping { get; set; }
        public DbSet<HCM_Setup_CostCenterAccountMapping> HCM_Setup_CostCenterAccountMapping { get; set; }
        public DbSet<HCM_Setup_Definitions> HCM_Setup_Definitions { get; set; }
        public DbSet<HCM_Setup_Detail> HCM_Setup_Detail { get; set; }
        public DbSet<HCM_Setup_FomulaType> HCM_Setup_FomulaType { get; set; }
        public DbSet<HCM_Setup_Gratuity> HCM_Setup_Gratuity { get; set; }
        public DbSet<HCM_Setup_JV_AccountAllowanceMapping> HCM_Setup_JV_AccountAllowanceMapping { get; set; }
        public DbSet<HCM_Setup_Master> HCM_Setup_Master { get; set; }
        public DbSet<HCM_Setup_MenuItem> HCM_Setup_MenuItem { get; set; }
        public DbSet<HCM_Setup_Pay_type> HCM_Setup_Pay_type { get; set; }
        public DbSet<HCM_Setup_RM> HCM_Setup_RM { get; set; }
        public DbSet<HCM_SETUP_SapCostCenter> HCM_SETUP_SapCostCenter { get; set; }
        public DbSet<HCM_SETUP_SapCostCenterNew1> HCM_SETUP_SapCostCenterNew1 { get; set; }
        public DbSet<HCM_Setup_Settlement> HCM_Setup_Settlement { get; set; }
        public DbSet<HCM_Setup_Tax> HCM_Setup_Tax { get; set; }
        public DbSet<HCM_Setup_Tax_Slab> HCM_Setup_Tax_Slab { get; set; }
        public DbSet<HCM_Setup_TaxLaw> HCM_Setup_TaxLaw { get; set; }
        public DbSet<HCM_Setup_Wppf_Slab> HCM_Setup_Wppf_Slab { get; set; }
        public DbSet<HCM_Setup_Year> HCM_Setup_Year { get; set; }
        public DbSet<HCM_Tax_Forecast_Allowance_Detail> HCM_Tax_Forecast_Allowance_Detail { get; set; }
        public DbSet<HCM_TaxComputation> HCM_TaxComputation { get; set; }
        public DbSet<HCM_TaxRefund> HCM_TaxRefund { get; set; }
        public DbSet<HCM_Vehicle_Detail> HCM_Vehicle_Detail { get; set; }
        public DbSet<HCM_Vehicle_Master> HCM_Vehicle_Master { get; set; }
        public DbSet<HCM_VehicleCategoryMapping> HCM_VehicleCategoryMapping { get; set; }
        public DbSet<HCM_VehicleDesignationMapping> HCM_VehicleDesignationMapping { get; set; }
        public DbSet<HCM_VehicleInformation> HCM_VehicleInformation { get; set; }
        public DbSet<HCM_WPPF> HCM_WPPF { get; set; }
        public DbSet<HRMS_ApplicantApplication> HRMS_ApplicantApplication { get; set; }
        public DbSet<HRMS_CandidateInfo> HRMS_CandidateInfo { get; set; }
        public DbSet<HRMS_EmployeeBank> HRMS_EmployeeBank { get; set; }
        public DbSet<HRMS_ProbationEvaluationMaster> HRMS_ProbationEvaluationMaster { get; set; }
        public DbSet<HRMS_Requisition> HRMS_Requisition { get; set; }
        public DbSet<HRMS_ResignationDetail> HRMS_ResignationDetail { get; set; }
        public DbSet<HRMS_Setup_AccountType> HRMS_Setup_AccountType { get; set; }
        public DbSet<HRMS_Setup_Applicant> HRMS_Setup_Applicant { get; set; }
        public DbSet<HRMS_Setup_Bank> HRMS_Setup_Bank { get; set; }
        public DbSet<HRMS_Setup_BankMaster> HRMS_Setup_BankMaster { get; set; }
        public DbSet<HRMS_Setup_BloodGroup> HRMS_Setup_BloodGroup { get; set; }
        public DbSet<HRMS_Setup_EducationType> HRMS_Setup_EducationType { get; set; }
        public DbSet<HRMS_Setup_EducationType_Copy> HRMS_Setup_EducationType_Copy { get; set; }
        public DbSet<HRMS_Setup_EmployeeFunction> HRMS_Setup_EmployeeFunction { get; set; }
        public DbSet<HRMS_Setup_EmployeeSubFunction> HRMS_Setup_EmployeeSubFunction { get; set; }
        public DbSet<HRMS_Setup_Gender> HRMS_Setup_Gender { get; set; }
        public DbSet<HRMS_Setup_Grade> HRMS_Setup_Grade { get; set; }
        public DbSet<HRMS_Setup_GroupInsurance> HRMS_Setup_GroupInsurance { get; set; }
        public DbSet<HRMS_Setup_HiringType> HRMS_Setup_HiringType { get; set; }
        public DbSet<HRMS_Setup_MartialStatus> HRMS_Setup_MartialStatus { get; set; }
        public DbSet<HRMS_Setup_Nationality> HRMS_Setup_Nationality { get; set; }
        public DbSet<HRMS_Setup_NoticePeriodType> HRMS_Setup_NoticePeriodType { get; set; }
        public DbSet<HRMS_Setup_PayMode> HRMS_Setup_PayMode { get; set; }
        public DbSet<HRMS_Setup_RCAReason> HRMS_Setup_RCAReason { get; set; }
        public DbSet<HRMS_Setup_Religion> HRMS_Setup_Religion { get; set; }
        public DbSet<HRMS_Setup_ReportingCostCenter> HRMS_Setup_ReportingCostCenter { get; set; }
        public DbSet<HRMS_Setup_SeprationStatus> HRMS_Setup_SeprationStatus { get; set; }
        public DbSet<HRMS_Setup_TerminationType> HRMS_Setup_TerminationType { get; set; }
        public DbSet<HRMS_Setup_ValueType> HRMS_Setup_ValueType { get; set; }
        public DbSet<HRMS_Setup_VisaType> HRMS_Setup_VisaType { get; set; }
        public DbSet<HRMS_Setup_WorkflowFormDetail> HRMS_Setup_WorkflowFormDetail { get; set; }
        public DbSet<HRMS_Setup_WorkflowFormMaster> HRMS_Setup_WorkflowFormMaster { get; set; }
        public DbSet<HRMS_Setup_WorkflowMaster> HRMS_Setup_WorkflowMaster { get; set; }
        public DbSet<HRMS_Setup_WorkflowStatus> HRMS_Setup_WorkflowStatus { get; set; }
        public DbSet<HRMS_Setup_WorkflowStepAction> HRMS_Setup_WorkflowStepAction { get; set; }
        public DbSet<HRMS_Setup_WorkflowStepDetail> HRMS_Setup_WorkflowStepDetail { get; set; }
        public DbSet<HRMS_Setup_WorkflowTaskStatus> HRMS_Setup_WorkflowTaskStatus { get; set; }
        public DbSet<HRMS_SetupDetail> HRMS_SetupDetail { get; set; }
        public DbSet<HRMS_SetupMaster> HRMS_SetupMaster { get; set; }
        public DbSet<HRMS_WorkFlowTaskMaster> HRMS_WorkFlowTaskMaster { get; set; }
        public DbSet<Setup_AD_Location> Setup_AD_Location { get; set; }
        public DbSet<Setup_Application> Setup_Application { get; set; }
        public DbSet<Setup_ApplicationRoleMapping> Setup_ApplicationRoleMapping { get; set; }
        public DbSet<Setup_Area> Setup_Area { get; set; }
        public DbSet<Setup_BusinessUnitCostCenterMapping> Setup_BusinessUnitCostCenterMapping { get; set; }
        public DbSet<Setup_Campaign> Setup_Campaign { get; set; }
        public DbSet<Setup_Category> Setup_Category { get; set; }
        public DbSet<Setup_City> Setup_City { get; set; }
        public DbSet<Setup_Company> Setup_Company { get; set; }
        public DbSet<Setup_CompanyDomains> Setup_CompanyDomains { get; set; }
        public DbSet<Setup_CostCenter> Setup_CostCenter { get; set; }
        public DbSet<Setup_Country> Setup_Country { get; set; }
        public DbSet<Setup_Currency> Setup_Currency { get; set; }
        public DbSet<Setup_Department> Setup_Department { get; set; }
        public DbSet<Setup_Designation> Setup_Designation { get; set; }
        public DbSet<Setup_Employee> Setup_Employee { get; set; }
        public DbSet<Setup_Employee_Log> Setup_Employee_Log { get; set; }
        public DbSet<Setup_EmployeeCompanyMapping> Setup_EmployeeCompanyMapping { get; set; }
        public DbSet<Setup_EmployeeType> Setup_EmployeeType { get; set; }
        public DbSet<Setup_Floor> Setup_Floor { get; set; }
        public DbSet<Setup_FloorAreaMapping> Setup_FloorAreaMapping { get; set; }
        public DbSet<Setup_Group> Setup_Group { get; set; }
        public DbSet<Setup_Location> Setup_Location { get; set; }
        public DbSet<Setup_MenuItem> Setup_MenuItem { get; set; }
        public DbSet<Setup_OperationType> Setup_OperationType { get; set; }
        public DbSet<Setup_Profession> Setup_Profession { get; set; }
        public DbSet<Setup_Province> Setup_Province { get; set; }
        public DbSet<Setup_Role> Setup_Role { get; set; }
        public DbSet<Setup_RoleAccess> Setup_RoleAccess { get; set; }
        public DbSet<Setup_RoleAccessFunction> Setup_RoleAccessFunction { get; set; }
        public DbSet<Setup_User> Setup_User { get; set; }
        public DbSet<Setup_UserAccessLocation> Setup_UserAccessLocation { get; set; }
        public DbSet<Setup_ValueType> Setup_ValueType { get; set; }
        public DbSet<Setup_ValueTypeCompanyMapping> Setup_ValueTypeCompanyMapping { get; set; }
        public DbSet<STG_Setup_City> STG_Setup_City { get; set; }
        public DbSet<STG_Setup_Designation> STG_Setup_Designation { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<ThirdParty_Menu_User_Mapping> ThirdParty_Menu_User_Mapping { get; set; }
        public DbSet<TMS_AccessFunction> TMS_AccessFunction { get; set; }
        public DbSet<TMS_Setup_LeaveDefinition> TMS_Setup_LeaveDefinition { get; set; }
        public DbSet<TMS_Setup_LeaveTypes> TMS_Setup_LeaveTypes { get; set; }
        public DbSet<TMS_Setup_Shift> TMS_Setup_Shift { get; set; }
        public DbSet<TS_Setup_BusinessUnit> TS_Setup_BusinessUnit { get; set; }
        public DbSet<UserLoginHistory> UserLoginHistories { get; set; }
        public DbSet<UserPasswordHistory> UserPasswordHistories { get; set; }
        public DbSet<AdvanceTax> AdvanceTaxes { get; set; }
        public DbSet<Allowance> Allowances { get; set; }
        public DbSet<Bonus10C> Bonus10C { get; set; }
        public DbSet<DEL_HRMS_Setup_GroupLifeInsurance> DEL_HRMS_Setup_GroupLifeInsurance { get; set; }
        public DbSet<DEL_HRMS_Setup_GroupPersonalAccidentInsurance> DEL_HRMS_Setup_GroupPersonalAccidentInsurance { get; set; }
        public DbSet<Finance_Type> Finance_Type { get; set; }
        public DbSet<HCM_Arrear_Amounts> HCM_Arrear_Amounts { get; set; }
        public DbSet<HCM_Constant> HCM_Constant { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping_20201230> HCM_EmployeeAllowanceMapping_20201230 { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping_20210708> HCM_EmployeeAllowanceMapping_20210708 { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping_20210809> HCM_EmployeeAllowanceMapping_20210809 { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping_20210812> HCM_EmployeeAllowanceMapping_20210812 { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping_20210812_1> HCM_EmployeeAllowanceMapping_20210812_1 { get; set; }
        public DbSet<HCM_EmployeeAllowanceMapping_20211104> HCM_EmployeeAllowanceMapping_20211104 { get; set; }
        public DbSet<HCM_EmployeeOvertimeDetail_20220106> HCM_EmployeeOvertimeDetail_20220106 { get; set; }
        public DbSet<HCM_EmployeeSalary_20200401> HCM_EmployeeSalary_20200401 { get; set; }
        public DbSet<HCM_EmployeeSalary_20210217> HCM_EmployeeSalary_20210217 { get; set; }
        public DbSet<HCM_EmployeeSalary_20210618> HCM_EmployeeSalary_20210618 { get; set; }
        public DbSet<HCM_EmployeeSalary_20211215> HCM_EmployeeSalary_20211215 { get; set; }
        public DbSet<HCM_EmployeeSalary_IncrementLetter> HCM_EmployeeSalary_IncrementLetter { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20201222> HCM_EmployeeSalaryDetail_20201222 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20201226> HCM_EmployeeSalaryDetail_20201226 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20210407> HCM_EmployeeSalaryDetail_20210407 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20210708> HCM_EmployeeSalaryDetail_20210708 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20210812_1> HCM_EmployeeSalaryDetail_20210812_1 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20211104> HCM_EmployeeSalaryDetail_20211104 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20211215> HCM_EmployeeSalaryDetail_20211215 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20220112> HCM_EmployeeSalaryDetail_20220112 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_20220720> HCM_EmployeeSalaryDetail_20220720 { get; set; }
        public DbSet<HCM_EmployeeSalaryDetail_IncrementLetter> HCM_EmployeeSalaryDetail_IncrementLetter { get; set; }
        public DbSet<HCM_EmployeeTaxDetails_20210217> HCM_EmployeeTaxDetails_20210217 { get; set; }
        public DbSet<HCM_EmployeeTaxForecast_20210217> HCM_EmployeeTaxForecast_20210217 { get; set; }
        public DbSet<HCM_EmployeeTaxForecast_20210825> HCM_EmployeeTaxForecast_20210825 { get; set; }
        public DbSet<HCM_Formula_Master> HCM_Formula_Master { get; set; }
        public DbSet<HCM_IncrementSheetHistory_IncrementLetter> HCM_IncrementSheetHistory_IncrementLetter { get; set; }
        public DbSet<HCM_Jv_accounts_20220202> HCM_Jv_accounts_20220202 { get; set; }
        public DbSet<HCM_LeaveEncashment_20220714> HCM_LeaveEncashment_20220714 { get; set; }
        public DbSet<HCM_Loan_Detail_20210217> HCM_Loan_Detail_20210217 { get; set; }
        public DbSet<HCM_Loan_Master_20210217> HCM_Loan_Master_20210217 { get; set; }
        public DbSet<HCM_Loan_Master_20220224> HCM_Loan_Master_20220224 { get; set; }
        public DbSet<HCM_Payroll_Master_20210709> HCM_Payroll_Master_20210709 { get; set; }
        public DbSet<HCM_PFDetail_20210217> HCM_PFDetail_20210217 { get; set; }
        public DbSet<HCM_PFDetail_20210408> HCM_PFDetail_20210408 { get; set; }
        public DbSet<HCM_PFMaster_20210217> HCM_PFMaster_20210217 { get; set; }
        public DbSet<HCM_PFMaster_20210408> HCM_PFMaster_20210408 { get; set; }
        public DbSet<HCM_PFMaster_20210712> HCM_PFMaster_20210712 { get; set; }
        public DbSet<HCM_PFMaster_20211129> HCM_PFMaster_20211129 { get; set; }
        public DbSet<HCM_PFMaster_20220426> HCM_PFMaster_20220426 { get; set; }
        public DbSet<HCM_PFWithdraw_20220608> HCM_PFWithdraw_20220608 { get; set; }
        public DbSet<HCM_Setup_CostCenterAccountMapping_20211206> HCM_Setup_CostCenterAccountMapping_20211206 { get; set; }
        public DbSet<HCM_Setup_JV_AccountAllowanceMapping_20220629> HCM_Setup_JV_AccountAllowanceMapping_20220629 { get; set; }
        public DbSet<HCM_Setup_RM_20210611> HCM_Setup_RM_20210611 { get; set; }
        public DbSet<HCM_Setup_RM_20210708> HCM_Setup_RM_20210708 { get; set; }
        public DbSet<HCM_Setup_RM_20210807> HCM_Setup_RM_20210807 { get; set; }
        public DbSet<HCM_Setup_RM_20220330> HCM_Setup_RM_20220330 { get; set; }
        public DbSet<HCM_Tax_ForecastingDetails> HCM_Tax_ForecastingDetails { get; set; }
        public DbSet<HCM_Vehicle_Detail_20210217> HCM_Vehicle_Detail_20210217 { get; set; }
        public DbSet<HCM_Vehicle_Master_20210217> HCM_Vehicle_Master_20210217 { get; set; }
        public DbSet<SAPCOSTKOT> SAPCOSTKOTs { get; set; }
        public DbSet<Setup_Employee_20210929> Setup_Employee_20210929 { get; set; }
        public DbSet<Setup_Employee_20211221> Setup_Employee_20211221 { get; set; }
        public DbSet<Setup_Employee_20211221_2> Setup_Employee_20211221_2 { get; set; }
        public DbSet<Setup_Employee_20211222> Setup_Employee_20211222 { get; set; }
        public DbSet<Setup_Employee_20220113> Setup_Employee_20220113 { get; set; }
        public DbSet<Setup_Employee_20220124> Setup_Employee_20220124 { get; set; }
        public DbSet<Setup_Employee_20220203> Setup_Employee_20220203 { get; set; }
        public DbSet<Setup_Employee_20220215> Setup_Employee_20220215 { get; set; }
        public DbSet<Setup_Employee_Log_20210927> Setup_Employee_Log_20210927 { get; set; }
        public DbSet<STG_HRMS_Setup_BloodGroup> STG_HRMS_Setup_BloodGroup { get; set; }
        public DbSet<STG_HRMS_Setup_EducationType> STG_HRMS_Setup_EducationType { get; set; }
        public DbSet<STG_HRMS_Setup_Gender> STG_HRMS_Setup_Gender { get; set; }
        public DbSet<STG_HRMS_Setup_MaritalStatus> STG_HRMS_Setup_MaritalStatus { get; set; }
        public DbSet<STG_Setup_BusinessUnit> STG_Setup_BusinessUnit { get; set; }
        public DbSet<STG_Setup_Category> STG_Setup_Category { get; set; }
        public DbSet<STG_Setup_CostCenter> STG_Setup_CostCenter { get; set; }
        public DbSet<STG_Setup_Department> STG_Setup_Department { get; set; }
        public DbSet<STG_Setup_EmployeeData> STG_Setup_EmployeeData { get; set; }
        public DbSet<STG_Setup_EmployeeType> STG_Setup_EmployeeType { get; set; }
        public DbSet<STG_Setup_Location> STG_Setup_Location { get; set; }
        public DbSet<STG_Setup_Province> STG_Setup_Province { get; set; }
        public DbSet<STG_Setup_SapCostCenter> STG_Setup_SapCostCenter { get; set; }
        public DbSet<tmpFerdeen> tmpFerdeens { get; set; }
    
        public virtual ObjectResult<DynamicQuerySelect_Result> DynamicQuerySelect(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DynamicQuerySelect_Result>("DynamicQuerySelect", queryParameter);
        }
    
        public virtual int INSERT_INTO_AuditLog(Nullable<int> parentKey, string primarykey, string tableName, Nullable<int> operationTypeId, Nullable<int> userId, string userIP)
        {
            var parentKeyParameter = parentKey.HasValue ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(int));
    
            var primarykeyParameter = primarykey != null ?
                new ObjectParameter("Primarykey", primarykey) :
                new ObjectParameter("Primarykey", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var operationTypeIdParameter = operationTypeId.HasValue ?
                new ObjectParameter("OperationTypeId", operationTypeId) :
                new ObjectParameter("OperationTypeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userIPParameter = userIP != null ?
                new ObjectParameter("UserIP", userIP) :
                new ObjectParameter("UserIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INTO_AuditLog", parentKeyParameter, primarykeyParameter, tableNameParameter, operationTypeIdParameter, userIdParameter, userIPParameter);
        }
    
        public virtual ObjectResult<RoleAccess_Select_Result> RoleAccess_Select(Nullable<int> role_Code, Nullable<int> applicationId)
        {
            var role_CodeParameter = role_Code.HasValue ?
                new ObjectParameter("Role_Code", role_Code) :
                new ObjectParameter("Role_Code", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RoleAccess_Select_Result>("RoleAccess_Select", role_CodeParameter, applicationIdParameter);
        }
    
        public virtual ObjectResult<SP_HCM_Mark_Employee_Allownce_With_For_Cast_Result> SP_HCM_Mark_Employee_Allownce_With_For_Cast(Nullable<int> allownceID, Nullable<int> companyId, Nullable<int> employeeID, Nullable<int> measure, Nullable<int> createdBy)
        {
            var allownceIDParameter = allownceID.HasValue ?
                new ObjectParameter("AllownceID", allownceID) :
                new ObjectParameter("AllownceID", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var measureParameter = measure.HasValue ?
                new ObjectParameter("Measure", measure) :
                new ObjectParameter("Measure", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HCM_Mark_Employee_Allownce_With_For_Cast_Result>("SP_HCM_Mark_Employee_Allownce_With_For_Cast", allownceIDParameter, companyIdParameter, employeeIDParameter, measureParameter, createdByParameter);
        }
    
        public virtual int SP_HCM_Mark_Employee_Education_Detail(Nullable<int> employeeID, Nullable<int> currentUserID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var currentUserIDParameter = currentUserID.HasValue ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HCM_Mark_Employee_Education_Detail", employeeIDParameter, currentUserIDParameter);
        }
    
        public virtual ObjectResult<HCM_SP_GET_ACTIVE_EMPLOYEE_DATA_Result> HCM_SP_GET_ACTIVE_EMPLOYEE_DATA(Nullable<int> employeeId, string employeeCode, string employeName, Nullable<int> companyId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var employeNameParameter = employeName != null ?
                new ObjectParameter("EmployeName", employeName) :
                new ObjectParameter("EmployeName", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HCM_SP_GET_ACTIVE_EMPLOYEE_DATA_Result>("HCM_SP_GET_ACTIVE_EMPLOYEE_DATA", employeeIdParameter, employeeCodeParameter, employeNameParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<HCM_SP_GET_ADVANCE_TAX_LIST_Result> HCM_SP_GET_ADVANCE_TAX_LIST(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HCM_SP_GET_ADVANCE_TAX_LIST_Result>("HCM_SP_GET_ADVANCE_TAX_LIST", companyIDParameter);
        }
    
        public virtual ObjectResult<HCM_SP_MARK_ADVANCE_TAX_Result> HCM_SP_MARK_ADVANCE_TAX(string employeeIDs, Nullable<double> advanceTax)
        {
            var employeeIDsParameter = employeeIDs != null ?
                new ObjectParameter("EmployeeIDs", employeeIDs) :
                new ObjectParameter("EmployeeIDs", typeof(string));
    
            var advanceTaxParameter = advanceTax.HasValue ?
                new ObjectParameter("AdvanceTax", advanceTax) :
                new ObjectParameter("AdvanceTax", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HCM_SP_MARK_ADVANCE_TAX_Result>("HCM_SP_MARK_ADVANCE_TAX", employeeIDsParameter, advanceTaxParameter);
        }
    
        public virtual int HCM_Increase_RM(Nullable<double> percentage, Nullable<int> employeeId)
        {
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(double));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HCM_Increase_RM", percentageParameter, employeeIdParameter);
        }
    
        public virtual int HCM_IncreaseRM(Nullable<int> companyId, Nullable<int> isFixed, Nullable<int> categoryId, Nullable<double> increasePercentage, Nullable<System.DateTime> increaseDate, Nullable<int> userId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var isFixedParameter = isFixed.HasValue ?
                new ObjectParameter("IsFixed", isFixed) :
                new ObjectParameter("IsFixed", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var increasePercentageParameter = increasePercentage.HasValue ?
                new ObjectParameter("IncreasePercentage", increasePercentage) :
                new ObjectParameter("IncreasePercentage", typeof(double));
    
            var increaseDateParameter = increaseDate.HasValue ?
                new ObjectParameter("IncreaseDate", increaseDate) :
                new ObjectParameter("IncreaseDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HCM_IncreaseRM", companyIdParameter, isFixedParameter, categoryIdParameter, increasePercentageParameter, increaseDateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Get_Company_Result> Get_Company(Nullable<int> groupId, Nullable<int> loginEmployeeId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var loginEmployeeIdParameter = loginEmployeeId.HasValue ?
                new ObjectParameter("LoginEmployeeId", loginEmployeeId) :
                new ObjectParameter("LoginEmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Company_Result>("Get_Company", groupIdParameter, loginEmployeeIdParameter);
        }
    }
}
