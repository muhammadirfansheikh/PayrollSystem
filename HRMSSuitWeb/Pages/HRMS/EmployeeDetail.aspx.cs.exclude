using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DAL;
using System.IO;
using System.Web.Services;
using HRMS;

public partial class Pages_HRMS_EmployeeDetail : Base
{
    Sybrid_DatabaseEntities context = new Sybrid_DatabaseEntities();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            try
            {
                if (Request.InputStream.Length > 0)
                {
                    using (StreamReader reader = new StreamReader(Request.InputStream))
                    {
                        string hexString = Server.UrlEncode(reader.ReadToEnd());
                        string imageName = DateTime.Now.ToString("dd-MM-yy hh-mm-ss");
                        string imagePath = string.Format("~/Captures/{0}.png", imageName);
                        File.WriteAllBytes(Server.MapPath(imagePath), ConvertHexToBytes(hexString));
                        Session["CapturedImage"] = ResolveUrl(imagePath);
                        Session["Image"] = ResolveUrl(imagePath);

                    }
                }
                int EmployeeId = GetEmpID == string.Empty ? 0 : Convert.ToInt32(GetEmpID);
                if (EmployeeId != 0)
                {
                    if (IsAdmin || IsSuperAdmin)
                    {
                        if (IsEmployeeExist(EmployeeId))
                        {
                            EmployeGeneralInfo(EmployeeId);

                        }
                        else
                        {
                            Response.Redirect("/Pages/HRMS/Employees.aspx");
                        }
                    }
                    else if (IsEmployee || IsIncharge)
                    {

                        EmployeGeneralInfo(EmployeeId);
                        HideDataUsingRole();
                        ucCompanyInfo.DisableForEmployee();

                    }
                }
                else
                {
                    Response.Redirect("/Pages/HRMS/Employees.aspx");
                }
            }
            catch (Exception ex)
            {
                divError.Visible = true;
                lblError.Text = ex.Message;
                //throw;
            }
        }
        btnUpdate.Visible = true;
    }
    public void HideDataUsingRole()
    {
        liOthers.Visible = false;
        liClearance.Visible = false;
        #region Disabling controls
        ucPersonalInfo.HideControlsForEmployee();
        ucCompanyInfo.DisableForEmployee();
        ucContactDetail.HideControlsForEmployee();
        ucBank.HideBankForEmployee();
        #endregion
    }
    public string SetParent
    {
        set
        {
            hfparenttab.Value = value;
        }
    }
    protected void btnUpdate_Click(object sender, EventArgs e)
    {
        try
        {
            ucPersonalInfo.UpdatePersonalInfo(Convert.ToInt32(GetEmpID));

            ucCompanyInfo.UpdateCompanyInfo(Convert.ToInt32(GetEmpID));

            ucContactDetail.UpdatePersonContact(Convert.ToInt32(GetEmpID));
            ucPersonaldetail.UpdatePersonalDetail(Convert.ToInt32(GetEmpID));
            ucOther.UpdateOtherDetails(Convert.ToInt32(GetEmpID));
            ucDocumentsNew.Upload(Convert.ToInt32(GetEmpID));
            ucDocumentsNew.BindAttachmentRepeater(Convert.ToInt32(GetEmpID));
            ucClearance.UpdateClearenceRecord(Convert.ToInt32(GetEmpID));
            ucHCMDetail.UpdateHcmDetail(Convert.ToInt32(GetEmpID));
            //var employee = context.Setup_Employee.FirstOrDefault(x => x.IsActive == true && x.EmployeeId == Convert.ToInt32(GetEmpID));
            context.INSERT_INTO_AuditLog(GetEmpID, "Setup_Employee", (int)Constant.OperationType.UPDATE, UserKey);
            var LogID = context.HRMS_InsertINTOSetup_EmployeeLog(Convert.ToInt32(GetEmpID)).FirstOrDefault();
            context.INSERT_INTO_AuditLog(LogID.Value.ToString(), "Setup_EmployeeLog", (int)Constant.OperationType.UPDATE, UserKey);
            //var Employee = context.Setup_Employee.Where(x => x.EmployeeId == Convert.ToInt32(GetEmpID)).FirstOrDefault();

            divSuccuss.Visible = true;
        }
        catch (Exception ex)
        {
            divError.Visible = true;
            lblError.Text = ex.Message;
        }
    }
    public string GetEmpID
    {
        get
        {
            return Request.QueryString["id"];
        }
    }
    public void BindEmployeeData(Setup_Employee Employee)
    {
        lblEmpCode.Text = Employee.EmployeeCode == "" ? "N/A" : Employee.EmployeeCode;
        lblFirstName.Text = Employee.FirstName == "" ? "N/A" : Employee.FirstName + " " + Employee.LastName;
        lblGender.Text = Employee.HRMS_Setup_Gender == null ? "N/A" : Employee.HRMS_Setup_Gender.GenderTitle;
        lblDateOfJoin.Text = Employee.JoiningDate.toDate() == "" ? "N/A" : Employee.JoiningDate.toDate();
        lblDOB.Text = Employee.DateOfDirth.toDate() == "" ? "N/A" : Employee.DateOfDirth.toDate();
        lblDepartment.Text = Employee.Setup_Department.DepartmentName == "" ? "N/A" : Employee.Setup_Department.DepartmentName;
        lblDesignation.Text = Employee.Setup_Designation.DesignationName == "" ? "N/A" : Employee.Setup_Designation.DesignationName;
        lblOfficeEmail.Text = Employee.OfficeEmailAddress == "" ? "N/A" : Employee.OfficeEmailAddress;
        lblSharePointID.Text = Employee.SharepointPortalId == "" ? "N/A" : Employee.SharepointPortalId;
        lblBU.Text = Employee.TS_Setup_BusinessUnit.BusinessUnitName == "" ? "N/A" : Employee.TS_Setup_BusinessUnit.BusinessUnitName;
        lblTMSID.Text = Employee.Setup_User.Count == 0 ? "" : Employee.Setup_User.FirstOrDefault().Login_ID == "" ? "N/A" : Employee.Setup_User.FirstOrDefault().Login_ID;
        lblExtension.Text = Employee.Extension == null ? "N/A" : Employee.Extension.ToString();
        if (Employee.IsActive)
        {
            lblActive.Visible = true;
        }
        else
        {
            lblInActive.Visible = true;
        }
        if (Employee.LocationId == (int)Constant.Location.Uae)
        {
            divCnic.Visible = false;
            divEmirates.Visible = true;
            lblEmiratesId.Text = Employee.CNIC;
        }
        else
        {
            divCnic.Visible = true;
            divEmirates.Visible = false;
            lblCNIC.Text = Employee.CNIC;
        }
        CheckControls(Employee.LocationId);

    }
    public void CheckControls(int EmployeeLocation)
    {
        if (EmployeeLocation == (int)Constant.Location.Uae)
        {
            liLifeInsurance.Visible = false;
        }
        else
        {
            liPassport.Visible = false;
        }
    }
    public void EmployeGeneralInfo(int EmployeeId)
    {
        var Employee_ = context.Setup_Employee.Where(c => c.EmployeeCode == "33334").ToList();
        var Employee = context.Setup_Employee.Where(c => c.EmployeeId == EmployeeId).FirstOrDefault();

        int CompanyID = Employee.CompanyId;
        BindEmployeeData(Employee);
        imgUser.ImageUrl = Employee.PictureName == null ? "/Picture/noprofilepic.png" : "/Picture/" + Employee.PictureName;
        ucPersonalInfo.EmployeeID = EmployeeId.ToString();
        ucPersonalInfo.BindDropdown();
        ucPersonalInfo.SetEmployeePersonalInfo(EmployeeId, Employee);
        ucCompanyInfo.BindDropdown(CompanyID, EmployeeId);
        ucCompanyInfo.BindUserInfo(Employee);
        ucContactDetail.EmpID = EmployeeId;
        ucContactDetail.BindDropdown();
        ucContactDetail.SetUserContacts(Employee);
        ucBank.EmpID = EmployeeId;
        ucBank.BindDropDown();
        ucBank.BindRepeaterEmployeeBankDetail(EmployeeId);
        ucPassportVisaDetail.EmpID = EmployeeId;
        ucPassportVisaDetail.BindDropdown();
        ucPassportVisaDetail.BindRepeaterEmployeePassportDetail(EmployeeId);
        ucLifeInsurance.EmpID = EmployeeId;
        ucLifeInsurance.BindDropDown();
        ucLifeInsurance.BindLifeInsuranceRepeater(EmployeeId);
        ucPersonaldetail.BindUserPersonalDetail(Employee);
        ucAcademicDetails.EmpID = EmployeeId;
        ucAcademicDetails.BindDropdown();
        ucAcademicDetails.BindRepeaterEmployeeEducation(EmployeeId);
        ucExperience.EmpID = EmployeeId;
        ucExperience.BindDropDown();
        ucExperience.BindRepeaterEmployeeExperience(EmployeeId);
        ucProfessionalReference.EmpID = EmployeeId;
        ucProfessionalReference.BindProfessionalReferrence(EmployeeId);
        ucOther.BindOtherDetails(EmployeeId);
        ucClearance.Binddropdown();
        ucDocumentsNew.EmpID = EmployeeId;
        ucDocumentsNew.BindAttachmentRepeater(EmployeeId);
        ucClearance.LoadClearenceFormSahrePointData(EmployeeId);

        ucHCMDetail.EmpID = EmployeeId;
        ucHCMDetail.BindDropdown(CompanyID, EmployeeId);
        ucHCMDetail.SetFields();
    }
    private bool IsEmployeeExist(int Id)
    {
        return context.Setup_Employee.Where(x => x.EmployeeId == Id).ToList().Count > 0;
    }
    #region EMPLOYEE PROFILE PICTURE

    public void OpenPopup()
    {
        ScriptManager.RegisterStartupScript(this, GetType(), "OpenPopup", "ShowDivPicture();", true);
    }
    protected void btnUploadImage_Click(object sender, EventArgs e)
    {
        OpenPopup();

    }
    private static byte[] ConvertHexToBytes(string hex)
    {
        byte[] bytes = new byte[hex.Length / 2];
        for (int i = 0; i < hex.Length; i += 2)
        {
            bytes[i / 2] = Convert.ToByte(hex.Substring(i, 2), 16);
        }
        return bytes;
    }

    [WebMethod(EnableSession = true)]
    public static string GetCapturedImage()
    {
        string url = HttpContext.Current.Session["CapturedImage"].ToString();
        HttpContext.Current.Session["CapturedImage"] = null;
        HttpContext.Current.Session["Image"] = url;
        return url;
    }

    [WebMethod(EnableSession = true)]
    public static string SaveImage(string Path)
    {


        return "";
    }


    protected void btnSaveImage_Click(object sender, EventArgs e)
    {
        int EmployeeId = GetEmpID == string.Empty ? 0 : Convert.ToInt32(GetEmpID);
        Random rnd = new Random();
        DateTime dt = DateTime.Now;
        string ImageName = dt.ToString("ddMMyyy") + "-" + rnd.Next(999999).ToString() + "-" + EmployeeId + ".png";
        string path = Server.MapPath("~/Picture/" + ImageName);

        string temp = HfImagePath.Value;
        if (temp == "")
        {


            fileupload.SaveAs(path);
        }
        else
        {
            string SourcePath = Server.MapPath(temp);

            File.Copy(SourcePath, path, true);

        }



        //int EmployeeId = Convert.ToInt32(hfEmployeeId.Value);
        Setup_Employee obj = context.Setup_Employee.FirstOrDefault(j => j.EmployeeId == EmployeeId);


        obj.ModifiedBy = UserKey;
        obj.ModifiedDate = dt;
        obj.PictureName = ImageName;
        context.SaveChanges();
        SetEmployeePicture();
        if (Convert.ToInt32(GetEmpID) == UserKey)
        {
            UserImage = "/Picture/" + ImageName;
        }
    }

    private void SetEmployeePicture()
    {
        int EmployeeId = GetEmpID == string.Empty ? 0 : Convert.ToInt32(GetEmpID);
        string EmployeeImageName = "";
        var Employeelist = context.Setup_Employee.Where(c => c.EmployeeId == EmployeeId).ToList();
        if (Employeelist.Count != 0)
        {
            EmployeeImageName = Employeelist[0].PictureName == null ? "" : Employeelist[0].PictureName.ToString();
        }

        if (EmployeeImageName == "")
        {
            imgUser.ImageUrl = "~/Images/noprofilepic.png";
        }
        else
        {
            imgUser.ImageUrl = "~/Picture/" + EmployeeImageName;
        }
    }

    #endregion
    protected void btnUpload_Click(object sender, EventArgs e)
    {
        ucDocumentsNew.Upload(Convert.ToInt32(GetEmpID));
        ucDocumentsNew.BindAttachmentRepeater(Convert.ToInt32(GetEmpID));
    }
}